<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bufferoverflow on Imlauer</title>
    <link>https://imlauera.github.io/tags/bufferoverflow/</link>
    <description>Recent content in Bufferoverflow on Imlauer</description>
    <generator>Hugo</generator>
    <language>es-es</language>
    <lastBuildDate>Wed, 07 Aug 2024 13:37:58 -0300</lastBuildDate>
    <atom:link href="https://imlauera.github.io/tags/bufferoverflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Explotando buffer overflows: copia un buffer de 200 bytes a otro del mismo tamaño pero con una string agregada.</title>
      <link>https://imlauera.github.io/post/bufferoverflow_4/</link>
      <pubDate>Wed, 07 Aug 2024 13:37:58 -0300</pubDate>
      <guid>https://imlauera.github.io/post/bufferoverflow_4/</guid>
      <description>&lt;p&gt;El overflow se produce porque tenemos dos buffers de 200, tenemos un sprintf toma un buffer de 200 y le agrega un texto y lo guarda en el otro buffer de 200. Entonces como la otra puede ser cercana a 200 (200 menos el byte del &lt;code&gt;&#39;\0&#39;&lt;/code&gt;), va a haber un overflow.&lt;/p&gt;&#xA;&lt;h3 id=&#34;una-posible-primer-solución-no-funciona-en-este-caso&#34;&gt;Una posible primer solución (no funciona en este caso)&lt;/h3&gt;&#xA;&lt;p&gt;Dos buffers de 200 bytes. Llenamos el buffer con 200, strcpy copiará hasta donde encuentre un 0 y como el store de bp no puede ser 0 porque guarda el valor de bp de la función padre entonces esa dirección va a pendear(concatenar) y la va a copiar al buffer de destino y podemos producir un overflow por no poner un 0 final en la string, porque como estamos leyendo de un archivo de texto binario podemos poner cualquier byte y los 200 puede ser todas As y no necesariamente terminar en 0, entonces luego al copiarlo se copian las 200 As más cualquier cosa que haya a continuación hasta que encuentre un 0.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Explotando el típico buffer overflow copia un buffer mas grande a uno más chico.</title>
      <link>https://imlauera.github.io/post/bufferoverflow_strcpy/</link>
      <pubDate>Wed, 07 Aug 2024 06:03:47 -0300</pubDate>
      <guid>https://imlauera.github.io/post/bufferoverflow_strcpy/</guid>
      <description>&lt;p&gt;Lee 210 de un archivo en el 1er buffer, pero en el 2do buffer está el overflow porque &lt;code&gt;Dst&lt;/code&gt;(Destination) es un buffer de 200 bytes. Le pasa un puntero, o sea la dirección del buffer Dst a la función &lt;code&gt;check&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Si en una función se pasa un puntero y a partir de esa dirección se le suma un offset y se encuentran valores para comparar o distintos campos, sabemos que ahí hay una estructura, podría haber una estructura que abarque todas las variables de la primera función.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Explotando un buffer overflow provocado al querer restringir/comparar el tamaño del buffer sin considerar el signo.</title>
      <link>https://imlauera.github.io/post/buffer_overflow_curso1/</link>
      <pubDate>Tue, 06 Aug 2024 16:59:15 -0300</pubDate>
      <guid>https://imlauera.github.io/post/buffer_overflow_curso1/</guid>
      <description>&lt;p&gt;Archivo del examen: &lt;code&gt;EXAMEN_LEVEL_1b.7z&lt;/code&gt;&#xA;&lt;a href=&#34;https://imlauera.github.io/CRACKING.7z&#34;&gt;EXAMENES LA CONTRASEÑA es A&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;O descargalo desde acá: &lt;a href=&#34;http://ricardonarvaja.info/WEB/IDA%20DESDE%20CERO/EXAMENES/EXAMENES%20Password=a.7z&#34;&gt;http://ricardonarvaja.info/WEB/IDA%20DESDE%20CERO/EXAMENES/EXAMENES%20Password=a.7z&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;La comparación se realizó con &lt;code&gt;jl&lt;/code&gt;.&#xA;Luego pisamos la variable &lt;code&gt;numero_random&lt;/code&gt; con &lt;code&gt;44434241&lt;/code&gt; que luego se xorea con la variable &lt;code&gt;numero_2&lt;/code&gt; que es 0, y eso hará que pasemos el nivel.&lt;/p&gt;&#xA;&lt;h5 id=&#34;inicio&#34;&gt;Inicio&lt;/h5&gt;&#xA;&lt;p&gt;Concepto fundamental: Qué es un offset?&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;En informática, un offset dentro de un array u otra estructura de datos es un entero que indica la distancia (desplazamiento) desde el inicio del objeto hasta un punto o elemento dado, presumiblemente dentro del mismo objeto. El concepto de distancia es solamente válido si todos los elementos del objeto son del mismo tamaño (típicamente dados en bytes o palabras).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
