<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Imlauer</title>
    <link>https://imlauera.github.io/tags/git/</link>
    <description>Recent content in Git on Imlauer</description>
    <generator>Hugo</generator>
    <language>es-es</language>
    <lastBuildDate>Sun, 29 Dec 2024 08:12:00 -0300</lastBuildDate>
    <atom:link href="https://imlauera.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Como reducir el tamaño de la carpeta .git</title>
      <link>https://imlauera.github.io/achicar_git_folder/</link>
      <pubDate>Sun, 29 Dec 2024 08:12:00 -0300</pubDate>
      <guid>https://imlauera.github.io/achicar_git_folder/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/5613345/how-to-shrink-the-git-folder&#34;&gt;https://stackoverflow.com/questions/5613345/how-to-shrink-the-git-folder&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Linus Torvalds recomienda: &lt;code&gt;git repack -a -d -f --depth=250 --window=250&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Pero si pusheaste imágenes git repack no las borrará. Para borrar esa información tenés que reescribir todo tu historial. Un ejemplo común de esto es cuando accidentalmente pusheas tus contraseñas en git. Podés borrar los archivos pero luego tenés que reescrbiir tu historial desde que pusheaste la contraseña hasta ahora y luego el nuevo repositorio a al origen.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Will this get rid of binary data that is orphaned in my repo? &amp;ldquo;git repack&amp;rdquo; will not git rid of images or binary data that you have checked into your repo and then deleted it. To delete those kind of data permanently from your repo you have to re-write your history. A common example of that is when you accidentally check in your passwords in git. You can go back and delete some files but then you have to re-write your history from then to now and then force push then new repo to your origin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Borrar archivo grande pusheado por error</title>
      <link>https://imlauera.github.io/borrar_archivo_grande_pusheado_por_error/</link>
      <pubDate>Fri, 15 Nov 2024 10:20:34 -0300</pubDate>
      <guid>https://imlauera.github.io/borrar_archivo_grande_pusheado_por_error/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git filter-branch --index-filter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;git rm -r --cached --ignore-unmatch &amp;lt;file/dir&amp;gt;&amp;#39;&lt;/span&gt; HEAD&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Que hacer si pusheaste un archivo muy grande a Github y te lo robotó</title>
      <link>https://imlauera.github.io/post/que_hacer_si_pusheaste_un_archivo_muy_grande/</link>
      <pubDate>Tue, 10 Sep 2024 03:23:24 -0300</pubDate>
      <guid>https://imlauera.github.io/post/que_hacer_si_pusheaste_un_archivo_muy_grande/</guid>
      <description>&lt;p&gt;&lt;code&gt;git reset HEAD^^&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/20002557/how-to-remove-a-too-large-file-in-a-commit-when-my-branch-is-ahead-of-master-by&#34;&gt;https://stackoverflow.com/questions/20002557/how-to-remove-a-too-large-file-in-a-commit-when-my-branch-is-ahead-of-master-by&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Como ver el historial de cambios de un archivo usando Git</title>
      <link>https://imlauera.github.io/post/como_mirar_historial_de_un_archivo_git/</link>
      <pubDate>Fri, 06 Sep 2024 04:28:33 -0300</pubDate>
      <guid>https://imlauera.github.io/post/como_mirar_historial_de_un_archivo_git/</guid>
      <description>&lt;p&gt;Así de simple:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install gitk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gitk nombre_del_archivo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O &lt;code&gt;git log -p -- nombre_de_tu_archivo&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comandos git</title>
      <link>https://imlauera.github.io/post/comandos_git/</link>
      <pubDate>Sat, 06 Jul 2024 11:18:47 -0300</pubDate>
      <guid>https://imlauera.github.io/post/comandos_git/</guid>
      <description>&lt;h2 id=&#34;comandos-comunes-de-la-cli-de-git&#34;&gt;COMANDOS COMUNES DE LA CLI DE GIT:&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;git --version&lt;/code&gt;&lt;/strong&gt; Muestra la version de git instalada.&lt;/p&gt;&#xA;&lt;h3 id=&#34;git-add&#34;&gt;GIT ADD&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/strong&gt; Agrega los cambios de todos los archivos al area de preparacion (antes del commit).&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;git add -A&lt;/code&gt;&lt;/strong&gt; (Otra opción) Genera el mismo efecto que &lt;strong&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/strong&gt;, la &lt;strong&gt;-A&lt;/strong&gt; significa &lt;strong&gt;&amp;ndash;all&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h3 id=&#34;git-blame&#34;&gt;GIT BLAME&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;git blame -c blogpost.html&lt;/code&gt;&lt;/strong&gt; Muestra quien ha hecho cambios en dicho archivo, indentado.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;git blame --help&lt;/code&gt;&lt;/strong&gt; Muestra en el navegador el uso del comando (en este caso blame).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
