<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Imlauer</title>
    <link>https://imlauera.github.io/tags/git/</link>
    <description>Recent content in Git on Imlauer</description>
    <generator>Hugo</generator>
    <language>es-es</language>
    <lastBuildDate>Sun, 29 Dec 2024 08:12:00 -0300</lastBuildDate>
    <atom:link href="https://imlauera.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Como reducir el tamaño de la carpeta .git</title>
      <link>https://imlauera.github.io/achicar_git_folder/</link>
      <pubDate>Sun, 29 Dec 2024 08:12:00 -0300</pubDate>
      <guid>https://imlauera.github.io/achicar_git_folder/</guid>
      <description>https://stackoverflow.com/questions/5613345/how-to-shrink-the-git-folder&#xA;Linus Torvalds recomienda: git repack -a -d -f --depth=250 --window=250&#xA;Pero si pusheaste imágenes git repack no las borrará. Para borrar esa información tenés que reescribir todo tu historial. Un ejemplo común de esto es cuando accidentalmente pusheas tus contraseñas en git. Podés borrar los archivos pero luego tenés que reescrbiir tu historial desde que pusheaste la contraseña hasta ahora y luego el nuevo repositorio a al origen.&#xA;Will this get rid of binary data that is orphaned in my repo?</description>
    </item>
    <item>
      <title>Borrar archivo grande pusheado por error</title>
      <link>https://imlauera.github.io/borrar_archivo_grande_pusheado_por_error/</link>
      <pubDate>Fri, 15 Nov 2024 10:20:34 -0300</pubDate>
      <guid>https://imlauera.github.io/borrar_archivo_grande_pusheado_por_error/</guid>
      <description>git filter-branch --index-filter &amp;#39;git rm -r --cached --ignore-unmatch &amp;lt;file/dir&amp;gt;&amp;#39; HEAD </description>
    </item>
    <item>
      <title>Que hacer si pusheaste un archivo muy grande a Github y te lo robotó</title>
      <link>https://imlauera.github.io/post/que_hacer_si_pusheaste_un_archivo_muy_grande/</link>
      <pubDate>Tue, 10 Sep 2024 03:23:24 -0300</pubDate>
      <guid>https://imlauera.github.io/post/que_hacer_si_pusheaste_un_archivo_muy_grande/</guid>
      <description>git reset HEAD^^&#xA;https://stackoverflow.com/questions/20002557/how-to-remove-a-too-large-file-in-a-commit-when-my-branch-is-ahead-of-master-by</description>
    </item>
    <item>
      <title>Como ver el historial de cambios de un archivo usando Git</title>
      <link>https://imlauera.github.io/post/como_mirar_historial_de_un_archivo_git/</link>
      <pubDate>Fri, 06 Sep 2024 04:28:33 -0300</pubDate>
      <guid>https://imlauera.github.io/post/como_mirar_historial_de_un_archivo_git/</guid>
      <description>Así de simple:&#xA;sudo apt install gitk gitk nombre_del_archivo O git log -p -- nombre_de_tu_archivo</description>
    </item>
    <item>
      <title>Comandos git</title>
      <link>https://imlauera.github.io/post/comandos_git/</link>
      <pubDate>Sat, 06 Jul 2024 11:18:47 -0300</pubDate>
      <guid>https://imlauera.github.io/post/comandos_git/</guid>
      <description>COMANDOS COMUNES DE LA CLI DE GIT: git --version Muestra la version de git instalada.&#xA;GIT ADD git add . Agrega los cambios de todos los archivos al area de preparacion (antes del commit).&#xA;git add -A (Otra opción) Genera el mismo efecto que git add ., la -A significa &amp;ndash;all.&#xA;GIT BLAME git blame -c blogpost.html Muestra quien ha hecho cambios en dicho archivo, indentado.&#xA;git blame --help Muestra en el navegador el uso del comando (en este caso blame).</description>
    </item>
  </channel>
</rss>
