<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>4 on Imlauer</title>
    <link>https://imlauera.github.io/tags/4/</link>
    <description>Recent content in 4 on Imlauer</description>
    <generator>Hugo</generator>
    <language>es-es</language>
    <lastBuildDate>Wed, 07 Aug 2024 13:37:58 -0300</lastBuildDate>
    <atom:link href="https://imlauera.github.io/tags/4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Explotando buffer overflows: copia un buffer de 200 bytes a otro del mismo tamaño pero con una string agregada.</title>
      <link>https://imlauera.github.io/post/bufferoverflow_4/</link>
      <pubDate>Wed, 07 Aug 2024 13:37:58 -0300</pubDate>
      <guid>https://imlauera.github.io/post/bufferoverflow_4/</guid>
      <description>&lt;p&gt;El overflow se produce porque tenemos dos buffers de 200, tenemos un sprintf toma un buffer de 200 y le agrega un texto y lo guarda en el otro buffer de 200. Entonces como la otra puede ser cercana a 200 (200 menos el byte del &lt;code&gt;&#39;\0&#39;&lt;/code&gt;), va a haber un overflow.&lt;/p&gt;&#xA;&lt;h3 id=&#34;una-posible-primer-solución-no-funciona-en-este-caso&#34;&gt;Una posible primer solución (no funciona en este caso)&lt;/h3&gt;&#xA;&lt;p&gt;Dos buffers de 200 bytes. Llenamos el buffer con 200, strcpy copiará hasta donde encuentre un 0 y como el store de bp no puede ser 0 porque guarda el valor de bp de la función padre entonces esa dirección va a pendear(concatenar) y la va a copiar al buffer de destino y podemos producir un overflow por no poner un 0 final en la string, porque como estamos leyendo de un archivo de texto binario podemos poner cualquier byte y los 200 puede ser todas As y no necesariamente terminar en 0, entonces luego al copiarlo se copian las 200 As más cualquier cosa que haya a continuación hasta que encuentre un 0.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
