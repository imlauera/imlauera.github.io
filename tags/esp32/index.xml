<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Esp32 on Imlauer</title>
    <link>https://imlauera.github.io/tags/esp32/</link>
    <description>Recent content in Esp32 on Imlauer</description>
    <generator>Hugo</generator>
    <language>es-es</language>
    <lastBuildDate>Thu, 02 Jan 2025 11:39:01 -0300</lastBuildDate>
    <atom:link href="https://imlauera.github.io/tags/esp32/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ESP32 CAM: Como enviar foto por SMTP, solucionar problema de conexión USB en Windows</title>
      <link>https://imlauera.github.io/esp32_enviar_foto_por_smtp_reinstalar_drivers_windows/</link>
      <pubDate>Thu, 02 Jan 2025 11:39:01 -0300</pubDate>
      <guid>https://imlauera.github.io/esp32_enviar_foto_por_smtp_reinstalar_drivers_windows/</guid>
      <description>Luego de flashear es recomendable hacer esta prueba: Apagá tu modem/router por unos minutos el esp32 se intentará conectar al wifi pero fallará luego prendelo y el ESP32 se debería reconectar automáticamente, si falla es porque programé algo mal XD, (todavía no hice la prueba). Quizás la mejora que se le podría hacer al código es contar cuantas veces se intentó conectar al WiFi si es superior a 30 que reinicie el ESP32 con el comando ESP.</description>
    </item>
    <item>
      <title>ESP32 controlar LED desde WiFi y fijar IP</title>
      <link>https://imlauera.github.io/ip_fija_esp32/</link>
      <pubDate>Sun, 29 Dec 2024 12:19:23 -0300</pubDate>
      <guid>https://imlauera.github.io/ip_fija_esp32/</guid>
      <description>https://randomnerdtutorials.com/esp32-static-fixed-ip-address-arduino-ide/</description>
    </item>
    <item>
      <title>Manejando casa remotamente a través de internet con Arduino FanIOT y firebase</title>
      <link>https://imlauera.github.io/post/arduino_faniot_led_firebase/</link>
      <pubDate>Fri, 18 Oct 2024 07:56:44 -0300</pubDate>
      <guid>https://imlauera.github.io/post/arduino_faniot_led_firebase/</guid>
      <description>Hace 2 años creé una aplicación en ReactJS con Firebase y leía esos campos de FireBase desde un ESP32 así podía prender y apagar luces remotamente, leer sensores.&#xA;Aplicación de ReactJS sudo apt remove cmdtest sudo npm install -g yarn unzip reactjs_ESP32logger-main.zip cd reactjs_ESP32logger-main rm -rf node_modules rm -rf yarn.lock yarn add caniuse-lite@1.0.30001632 ### Agregá en package.json &amp;#34;resolutions&amp;#34;: { &amp;#34;caniuse-lite&amp;#34;: &amp;#34;1.0.30001632&amp;#34; }, ### Borrá todos los babels de yarn.lock The solution was to manually delete all @babel/* entries from yarn.</description>
    </item>
    <item>
      <title>Subir capturas con una esp32 webcam a google drive</title>
      <link>https://imlauera.github.io/post/esp32_webcam_google_drive/</link>
      <pubDate>Fri, 10 Nov 2023 04:51:54 -0300</pubDate>
      <guid>https://imlauera.github.io/post/esp32_webcam_google_drive/</guid>
      <description>El ESP32 siempre pierde la conexión con la WiFi y cuando corta la luz tenés que esperar 15 minutos para volver a conectarte agregando un delay al comienzo y a veces la conexión wifi al ser tan pobre tenes que subir foto de menor calidad, entonces tenes 3 opciones:&#xA;Escribir funciones para detectar si se ha perdido la conexión y volver a reconectarse.&#xA;Escribir un perro guardían (watchdog): https://github.com/TronixLab/ESP32_Watchdog&#xA;Reinicialo cada 10 minutos pero para hacer esto tenés que desactivar los sensores y escribir manualmente la configuración porque sino siempre van a volver a su valor por defecto.</description>
    </item>
    <item>
      <title>ESP32 con Arduino Cli How To</title>
      <link>https://imlauera.github.io/post/arduino-cli-how-to/</link>
      <pubDate>Wed, 12 Jul 2023 02:26:15 -0300</pubDate>
      <guid>https://imlauera.github.io/post/arduino-cli-how-to/</guid>
      <description>Instalacion git clone https://github.com/arduino/arduino-cli cd arduino-cli bash install.sh cd bin/ sudo mv arduino-cli /usr/bin Agregar y descargar un indice adicional:&#xA;arduino-cli core update-index --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json Iniciar la configuracion:&#xA;arduino-cli config init arduino-cli config dump --verbose Cuando inicias la configuracion te crea un archivo en ~/.arduino/arduino-cli.yaml podes editar ese archivo y agregar la URL del indice en ese archivo en vez de usar &amp;ndash;additional-urls como se demostro en el paso 1.</description>
    </item>
  </channel>
</rss>
