<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programacion on Imlauer</title>
    <link>https://imlauera.github.io/tags/programacion/</link>
    <description>Recent content in Programacion on Imlauer</description>
    <generator>Hugo</generator>
    <language>es-es</language>
    <lastBuildDate>Fri, 01 Nov 2024 07:20:52 -0300</lastBuildDate>
    <atom:link href="https://imlauera.github.io/tags/programacion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cambios al theme de blogger: bushwich</title>
      <link>https://imlauera.github.io/cambios_bushwich/</link>
      <pubDate>Fri, 01 Nov 2024 07:20:52 -0300</pubDate>
      <guid>https://imlauera.github.io/cambios_bushwich/</guid>
      <description>Cree un blog en blogger y intenté modificar un theme y hacerlo parecido al que uso acá.&#xA;https://imlauer.blogspot.com/2024/10/taller-de-reparacion-de.html</description>
    </item>
    <item>
      <title>Everything you need to know about pointers</title>
      <link>https://imlauera.github.io/post/everything_you_need_to_know_about_pointers/</link>
      <pubDate>Tue, 10 Oct 2023 16:23:49 -0300</pubDate>
      <guid>https://imlauera.github.io/post/everything_you_need_to_know_about_pointers/</guid>
      <description>#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; struct { int ancho; int alto; } typedef Rectangulo; struct queseyo{ char nombre[256]; char apellido[256]; char fecha_nacimiento[256]; int dni; } ; /*&#x9;Esto define una estructura Rectangulo **&#x9;struct { **&#x9;int ancho; **&#x9;int alto; **&#x9;} Rectangulo; ** */ int main(){ struct queseyo agenda; Rectangulo abc; Rectangulo prueba1; prueba1.ancho = 10; prueba1.alto = 20; printf(&amp;#34;ancho: %d, alto: %d\n&amp;#34;,prueba1.ancho,prueba1.alto); char * pointer_to_readonly_memory_string = &amp;#34;asdf&amp;#34;; //char pointer_to_memory_on_the_stack = malloc(sizeof(char)*5); char pointer_to_memory_on_the_stack[] = &amp;#34;asdf&amp;#34;; // pointer_to_readonly_memory_string[0] = &amp;#39;b&amp;#39;; // segmentation fault pointer_to_memory_on_the_stack[0] = &amp;#39;b&amp;#39;; printf(&amp;#34; pointer_to_readonly_memory_string: %s\n&amp;#34;, pointer_to_readonly_memory_string); printf(&amp;#34; pointer_to_memory_on_the_stack: %s\n&amp;#34;, pointer_to_memory_on_the_stack); // *pointer = *(pointer+0) = pointer[0] // Equivalentes int *pointer = malloc(sizeof(int)*4); // int *pointer1 = malloc(sizeof(*pointer1)*4); // int pointer2[4]; *pointer = 1; *(pointer+1) = 2; pointer[2]=3; *(pointer+3) = 4; *(pointer+4) = 5; for (int i=0; i&amp;lt;4; i++){ pointer[i]=i; } // malloc te crea en la memoria un espacio de 5 caracteres //char *hola = malloc(sizeof(char)*5); char *hola = malloc(sizeof(*hola)*5); // Todas estas expresiones son equivalentes *hola = &amp;#39;h&amp;#39;; hola[0] = &amp;#39;h&amp;#39;; *(hola+0) = &amp;#39;h&amp;#39;; *(hola+1) = &amp;#39;o&amp;#39;; *(hola+2) = &amp;#39;l&amp;#39;; *(hola+3) = &amp;#39;a&amp;#39;; *(hola+4) = &amp;#39;\0&amp;#39;; sprintf(hola,&amp;#34;%s&amp;#34;,&amp;#34;chau&amp;#34;); for (int i=0; i&amp;lt;4; i++){ printf(&amp;#34;pointer: %d\n&amp;#34;,pointer[i]); } printf(&amp;#34;pointer: %s\n&amp;#34;,hola); free(pointer); free(hola); return 0; } Invertir una lista enlazada https://www.</description>
    </item>
    <item>
      <title>Error de Segmentación (Segmentation Fault) en C</title>
      <link>https://imlauera.github.io/post/segmentation_fault_in_c/</link>
      <pubDate>Thu, 05 Oct 2023 05:22:12 -0300</pubDate>
      <guid>https://imlauera.github.io/post/segmentation_fault_in_c/</guid>
      <description>Escenarios comunes de fallas de segmentación En una falla de segmentación, un programa intenta acceder a una memoria a la que no está autorizado o que no existe. Algunos escenarios comunes que pueden causar fallas de segmentación son:&#xA;Modificar una cadena de solo lectura Acceder a una dirección que está liberada Acceder a límites de índice fuera de la matriz Uso inadecuado de scanf() Desbordamiento de pila Desreferenciación de puntero no inicializado 1.</description>
    </item>
  </channel>
</rss>
